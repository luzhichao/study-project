# \u5206\u5E93\u5206\u8868
# reformer-sharding-jdbc
reformer.sharding-sphere.enabled=true
# \u663E\u793Asql
spring.shardingsphere.props.sql.show=true

# sharding-jdbc
spring.shardingsphere.datasource.names=master
spring.shardingsphere.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.url=jdbc:mysql://192.168.11.105:7006/test_lu?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8&nullCatalogMeansCurrent=true
spring.shardingsphere.datasource.master.username=ENC(sprbu0UfKt5pvPwCK3U9Ti2e49ym9FJZdiGqb9pmMtx6DeM45ChXmBS0DqUkwzqj)
spring.shardingsphere.datasource.master.password=ENC(1kZ2tLFH7Qw8k5eP+NX9RMngcSDN1745AJIMo+pYks2p//vcv+jpDNlFfdWER3e0)
# \u5206\u8868
spring.shardingsphere.sharding.tables.t_user.logic-table=t_user
spring.shardingsphere.sharding.tables.t_user.key-generator.column=id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE
# worker.id\u4E0D\u91CD\u590D\u5373\u53EF
spring.shardingsphere.sharding.tables.t_user.key-generator.props.worker.id=123

# master.t_user_$->{2022..2025}_$->{(1..12).collect{t -> t.toString().padLeft(2,'0')}}_$->{(1..31).collect{t -> t.toString().padLeft(2,'0')}}
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=master.t_user_$->{[202205,202206]}
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.sharding-column=birthday
# standard\u5206\u7247\u7CBE\u786E\u67E5\u8BE2\uFF08=\u3001in\uFF09\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.precise-algorithm-class-name=org.gecko.reformer.algorithm.PreciseTableShardingAlgorithm
# standard\u5206\u7247\u8303\u56F4\u67E5\u8BE2\uFF08between\uFF09\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.range-algorithm-class-name=org.gecko.reformer.algorithm.RangeTableShardingAlgorithm













